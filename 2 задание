"""
Допустим, у нас есть следующие датафреймы:

- `products_df`: Колонки - `product_id`, `product_name`.
- `categories_df`: Колонки - `category_id`, `category_name`.
- `product_categories_df`: Колонки - `product_id`, `category_id`.
"""

from pyspark.sql import SparkSession
from pyspark.sql.functions import col

# Инициализация SparkSession, предполагается что SparkSession уже создана и называется spark
# spark = SparkSession.builder.appName("example").getOrCreate()

# Примеры датафреймов (предполагается что они уже загружены и готовы к использованию)
# products_df = ...
# categories_df = ...
# product_categories_df = ...
# Выполним left outer join между products_df и product_categories_df для получения всех продуктов и их категорий (если они есть)
products_with_categories_df = products_df.join(
    product_categories_df,
    products_df.product_id == product_categories_df.product_id,
    how="left"
).select(
    products_df.product_name,
    product_categories_df.category_id
)
# Затем присоединим categories_df к полученному датафрейму для получения имен категорий
result_df = products_with_categories_df.join(
    categories_df,
    products_with_categories_df.category_id == categories_df.category_id,
    how="left"
).select(
    products_with_categories_df.product_name.alias("product_name"),
    categories_df.category_name.alias("category_name")
)
# Для продуктов без категорий category_name будет null, но они будут включены в результат
# Если нужно, для идентификации продуктов без категорий можно добавить фильтрацию и отдельные обработки
# Отображение результата
result_df.show()
# Далее, зависимо от задачи, можно добавить фильтрацию и обработку для отображения только уникальных или желаемых значений.
#Этот код создает новый датафрейм `result_df`, в котором для каждого продукта указана его категория (или `null`, если категория отсутствует). Для получения только продуктов без категорий, можно добавить соответствующую фильтрацию по `category_name`:

products_without_categories = result_df.filter(col("category_name").isNull())
products_without_categories.show()
